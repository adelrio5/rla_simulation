model_params:
  name: 'MlpConditionalVAE_with_decay_masses'
  data_feature_dim: [ 3, 3 ]
  latent_dim: 64
  conditional_feats: { 'momenta_mother_pp': [ 1, 3 ], 'mass_particle_1': [ 1 ], 'mass_particle_2': [ 1 ], 'mass_particle_3': [ 1 ] }

exp_params:
  adam_lr: 0.001
  kld_weight: 0.00025
  manual_seed: 1265
  batch_size: 512

trainer_params:
  max_epochs: 1000
  check_val_every_n_epoch: 10

logging_params:
  save_dir: "logs/"
  name: "MlpConditionalVAE_with_masses"

data_params:
  data_path: "data/two_modes_test.root"
  train_batch_size: 512
  val_batch_size: 512


generate_params:
  checkpoint_path: "logs/MlpConditionalVAE_with_decay_masses/version_1/checkpoints/last.ckpt"
  pdf_prefix: "logs/MlpConditionalVAE_with_decay_masses/version_1/samples/gen_res"
#  total_samples: 20000
  batch_size: 512
  predict_batch_size: 512
  kld_weight: 0.00025


plotter:
  check_file_prefix: 'logs/plotter_checks/data_check'
  ranges:
    px_min: -3
    px_max: 3
    py_min: -3
    py_max: 3
    pz_min: -5
    pz_max: 5000
  unit: '[GeV]'

# Conditions will be an array of strings or an array of arrays.
# If its an array of arrays, the second axis will always be 2 and the second element will refer to what to render
# TODO: Should change it to dict?
  conditions: [
    ['{momenta_mother}[:,0,2] < 1000','${p_m}_z$ < 1000'],
    ['{pdgid_particle_1} == -11','At least one decay product is e+'],
    ['np.logical_and({pdgid_particle_1} == 321, np.logical_and({pdgid_particle_2} == 321, np.logical_and({pdgid_particle_3} == -321, {pdgid_mother} == 411)))', '$D^+ -> K^+ K^+ K^-$'],
    ['np.logical_and({pdgid_particle_1} == -11, np.logical_and({pdgid_particle_2} == -11, np.logical_and({pdgid_particle_3} == +11, {pdgid_mother} == 411)))', '$D^+ -> e^+ e^+ e^-$'],
  ]
