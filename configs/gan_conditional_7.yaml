model_params:
  name: 'MlpConditionalWGAN_with_masses_v2'
#  data_feature_dim: [ 3, 3 ]
  latent_dim: 16
  conditional_feats: { 'momenta_mother_pp': [ 1, 3 ], 'momenta_mother': [ 1, 3 ], 'particle_1_M': [ 1 ], 'particle_2_M': [ 1 ], 'particle_3_M': [ 1 ], 'mother_M_TRUE': [ 1 ] }
#  conditional_feats: {}
#  data_feats: { 'momenta_pp': [ 3, 3 ], 'momenta': [ 3, 3 ], 'mother_M_TRUE': [ 1 ]}
#  data_feats: {'momenta': [ 3, 3 ], 'mother_M_TRUE': [ 1 ] }
  data_feats: {'momenta': [ 3, 3 ]}
#  conditional_feats: { 'momenta_mother_pp': [ 1, 3 ], 'particle_1_M': [ 1 ], 'particle_2_M': [ 1 ], 'particle_3_M': [ 1 ]}

exp_params:
  adam_lr: 0.0001
  manual_seed: 1265
  batch_size: 3000
  reuse_prev_epoch_if_next_not_ready: True
  loss_params:
#    kld_weight: 0.00025
    predicted_var: "momenta_sampled"
    truth_var: "momenta"
    loss_type: "mse"
    secondary_weight: 0.0
#    kld_weight: 0.0s

trainer_params:
  max_epochs: 200000
  check_val_every_n_epoch: 10000
  num_sanity_val_steps: 0

logging_params:
  save_dir: "logs/"
  name: "MlpConditionalVAE_with_masses_v2"

data_params:
  train_batch_size: 1000
  val_batch_size: 1000
  legacy_rotation: False
  split_seed: 99
  use_root_reader: True
  num_workers: 0
  load_together: 1000000
  data_path:
    train:
      path: "data/single_mode_train_rot.root"
      num_blocks: 10
      block_size: 1000
    validate:
      # path: "data/two_modes_test.root"
      path: "data/single_mode_train_rot.root"
      num_blocks: 10
      block_size: 1000

checkpoint:
  path: "xxx"

generate_params:
  pdf_prefix: ""
  batch_size: 10000
  predict_batch_size: 10000
  kld_weight: 0.00025


plotter:
  check_file_prefix: 'logs/plotter_checks/data_check'
  ranges:
    px_min: -3.
    px_max: 3.
    py_min: -3.
    py_max: 3.
    pz_min: -5.
    pz_max: 5000.
  unit: '[GeV]'

# Conditions will be an array of strings or an array of arrays.
# If its an array of arrays, the second axis will always be 2 and the second element will refer to what to render
# TODO: Should change it to dict?
  conditions: [
#    ['{momenta_mother}[:,0,2] < 1000','${p_m}_z$ < 1000'],
#    ['{particle_1_PID} == -11','At least one decay product is e+'],
    ['np.logical_and({particle_1_PID} == 321, np.logical_and({particle_2_PID} == 321, np.logical_and({particle_3_PID} == -321, {mother_PID} == 411)))', '$D^+ -> K^+ K^+ K^-$'],
#    ['np.logical_and({particle_1_PID} == -11, np.logical_and({particle_2_PID} == -11, np.logical_and({particle_3_PID} == +11, {mother_PID} == 411)))', '$D^+ -> e^+ e^+ e^-$'],
  ]


